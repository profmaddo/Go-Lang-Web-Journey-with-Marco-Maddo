# Dockerfile for Lecture 03 â€“ Static Files and HTML Templates

# ğŸ‡ºğŸ‡¸ Builder stage â€“ compiles Go binary
# ğŸ‡§ğŸ‡· Etapa de build â€“ compila o binÃ¡rio Go
FROM golang:1.21 AS builder

WORKDIR /app

# ğŸ‡ºğŸ‡¸ Copy all source files
# ğŸ‡§ğŸ‡· Copia todos os arquivos fonte
COPY . .

# ğŸ‡ºğŸ‡¸ Build the binary as a static executable
# ğŸ‡§ğŸ‡· Compila o binÃ¡rio como executÃ¡vel estÃ¡tico
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o webserver

# ğŸ‡ºğŸ‡¸ Runtime stage â€“ runs the compiled binary
# ğŸ‡§ğŸ‡· Etapa de runtime â€“ executa o binÃ¡rio compilado
FROM alpine:latest

WORKDIR /root/

# ğŸ‡ºğŸ‡¸ Copy binary
# ğŸ‡§ğŸ‡· Copia o binÃ¡rio
COPY --from=builder /app/webserver .

# ğŸ‡ºğŸ‡¸ Copy HTML templates folder
# ğŸ‡§ğŸ‡· Copia a pasta de templates HTML
COPY --from=builder /app/templates ./templates

# ğŸ‡ºğŸ‡¸ Copy static assets (CSS, images, JS)
# ğŸ‡§ğŸ‡· Copia os arquivos estÃ¡ticos (CSS, imagens, JS)
COPY --from=builder /app/static ./static

# ğŸ‡ºğŸ‡¸ Expose port 8080
# ğŸ‡§ğŸ‡· ExpÃµe a porta 8080
EXPOSE 8080

# ğŸ‡ºğŸ‡¸ Run the server
# ğŸ‡§ğŸ‡· Executa o servidor
CMD ["./webserver"]
